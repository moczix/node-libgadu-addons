--- protobuf-c.c
+++ protobuf-c.c
@@ -48,6 +48,9 @@
 #include <stdlib.h>	/* for malloc, free */
 #include <string.h>	/* for strcmp, strlen, memcpy, memmove, memset */
 
+/* Pull WORDS_BIGENDIAN etc */
+#include "config.h"
+
 #include "protobuf-c.h"
 
 #define TRUE				1
@@ -1660,9 +1663,11 @@
 	}
 	return rv;
 
+#if !defined(WORDS_BIGENDIAN)
 no_packing_needed:
 	buffer->append(buffer, rv, array);
 	return rv;
+#endif
 }
 
 static size_t
@@ -1695,7 +1700,7 @@
 		siz = sizeof_elt_in_repeated_array(field->type);
 		for (i = 0; i < count; i++) {
 			rv += required_field_pack_to_buffer(field, array, buffer);
-			array += siz;
+			array = ((char*)array) + siz;
 		}
 		return rv;
 	}
@@ -1991,7 +1996,6 @@
 
 			switch (fields[i].type) {
 			case PROTOBUF_C_TYPE_BYTES: {
-				el_size = sizeof(ProtobufCBinaryData);
 				uint8_t *e_data =
 					((ProtobufCBinaryData *) earlier_elem)->data;
 				uint8_t *l_data =
@@ -1999,6 +2003,7 @@
 				const ProtobufCBinaryData *d_bd =
 					(ProtobufCBinaryData *) def_val;
 
+				el_size = sizeof(ProtobufCBinaryData);
 				need_to_merge =
 					(e_data != NULL &&
 					 (d_bd != NULL &&
@@ -2009,11 +2014,11 @@
 				break;
 			}
 			case PROTOBUF_C_TYPE_STRING: {
-				el_size = sizeof(char *);
 				char *e_str = *(char **) earlier_elem;
 				char *l_str = *(char **) latter_elem;
 				const char *d_str = def_val;
 
+				el_size = sizeof(char *);
 				need_to_merge = e_str != d_str && l_str == d_str;
 				break;
 			}
@@ -2742,6 +2747,8 @@
 		const ProtobufCFieldDescriptor *field;
 		ScannedMember tmp;
 
+		memset(&tmp, 0, sizeof(ScannedMember));
+
 		if (used == 0) {
 			PROTOBUF_C_UNPACK_ERROR("error parsing tag/wiretype at offset %u",
 						(unsigned) (at - data));
@@ -2887,6 +2894,7 @@
 					      field->quantifier_offset);
 			if (*n_ptr != 0) {
 				unsigned n = *n_ptr;
+				void *a;
 				*n_ptr = 0;
 				assert(rv->descriptor != NULL);
 #define CLEAR_REMAINING_N_PTRS()                                              \
@@ -2896,7 +2904,7 @@
                   if (field->label == PROTOBUF_C_LABEL_REPEATED)              \
                     STRUCT_MEMBER (size_t, rv, field->quantifier_offset) = 0; \
                 }
-				void *a = do_alloc(allocator, siz * n);
+				a = do_alloc(allocator, siz * n);
 				if (!a) {
 					CLEAR_REMAINING_N_PTRS();
 					goto error_cleanup;
@@ -3049,6 +3057,8 @@
 protobuf_c_boolean
 protobuf_c_message_check(const ProtobufCMessage *message)
 {
+	unsigned i;
+
 	if (!message ||
 	    !message->descriptor ||
 	    message->descriptor->magic != PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC)
@@ -3056,7 +3066,6 @@
 		return FALSE;
 	}
 
-	unsigned i;
 	for (i = 0; i < message->descriptor->n_fields; i++) {
 		const ProtobufCFieldDescriptor *f = message->descriptor->fields + i;
 		ProtobufCType type = f->type;
